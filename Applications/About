local xSize, ySize = term.getSize()
 
local fileImage = 0
local fileDocument = 0
local fileOther = 0
local computerLabel = os.getComputerLabel()
if computerLabel == nil then computerLabel = "not set" end
 
--------------------MODEM FIND----------------------------
function findModem()
        local PeriList = peripheral.getNames()
        for i=1,#PeriList do
                if peripheral.getType(PeriList[i]) == "modem" then
                        return PeriList[i]
                end
        end
end
 
local computerModem = findModem()
if computerModem == nil then computerModem = "not found" end
 
local function clearScreen(color)
        term.setBackgroundColor(color)
        term.clear()
end
 
local function fadeIn(time)
        clearScreen(colors.gray)
        sleep(time)
        clearScreen(colors.lightGray)
        sleep(time)
        clearScreen(colors.white)
        sleep(time)
end
 
local function fadeOut(time)
        clearScreen(colors.lightGray)
        sleep(time)
        clearScreen(colors.gray)
        sleep(time)
        clearScreen(colors.black)
        sleep(time)
        term.setCursorPos(1,1)
        term.setTextColor(colors.white)
end
 
local function getSizeOfAll()
        local sizeOfAll1 = 0
        local function files(path)
                local massiv = fs.list(path)
                for i=1,#massiv do
                        if fs.isDir(massiv[i]) then
                                files(path.."/"..massiv[i])
                        else
                                sizeOfAll1 = sizeOfAll1 + fs.getSize(path.."/"..massiv[i])
                        end
                end
        end
        files("")
        return sizeOfAll1
end
 
local function getFileFormat(file)
        local start,ending = string.find(file,"%.%w*$")
        if start == nil then
                return nil
        else
                return string.sub(file,start,ending)
        end
end
 
local function getSizeOfFormat()
        local sizeOfAll1 = 0
        local function files(path)
                local massiv = fs.list(path)
                for i=1,#massiv do
                        if fs.isDir(massiv[i]) then
                                files(path.."/"..massiv[i])
                        else
                                local f = getFileFormat(path.."/"..massiv[i])
                                local s = fs.getSize(path.."/"..massiv[i])
                                if f == ".png" then
                                        fileImage = fileImage + s
                                elseif f == ".cfg" or f == ".log" then
                                        fileDocument = fileDocument + s
                                elseif f == nil then
                                        fileOther = fileOther + s
                                end
                        end
                end
        end
        files("")
        return sizeOfAll1
end
 
local function writeText(text,x,y)
        term.setCursorPos(x,y)
        term.write(text)
end
 
local function infoText(key,keyColor,value,x,y)
        term.setCursorPos(x,y)
        term.setTextColor(keyColor)
        term.write(key..": ")
        term.setTextColor(colors.lightGray)
        term.write(value)
end
 
getSizeOfFormat()
 
local sizeOfAll =  getSizeOfAll()
local freeSpace = fs.getFreeSpace("")
local totalSpace = freeSpace + sizeOfAll
local lengthOfPolosa = xSize-6
local lengthOfAll = math.floor(lengthOfPolosa*(math.ceil(sizeOfAll/totalSpace*100))/100)
local lengthOfDocuments = math.floor(lengthOfPolosa*math.ceil(fileDocument/sizeOfAll*100)/100)
local lengthOfImages = math.floor(lengthOfPolosa*math.ceil(fileImage/sizeOfAll*100)/100)
 
-------------------------------------------------------------
fadeIn(0.05)
 
local xStart = math.floor(xSize/2-lengthOfPolosa/2)
local yStart = ySize-3
 
 
local function displayBar(time)
        while true do
        for y=yStart,(yStart+1) do
                for x=(xStart+1),(xStart+lengthOfPolosa) do
                        paintutils.drawPixel(x,y,colors.gray)
                end
        end
        for y=yStart,(yStart+1) do
                for x=(xStart+1),(xStart+lengthOfAll) do
                        paintutils.drawPixel(x,y,colors.black)
                end
        end
 
------------------------------
        sleep(2)
------------------------------
 
        for y=yStart,(yStart+1) do
                for x=(xStart+1),(xStart+lengthOfPolosa) do
                        paintutils.drawPixel(x,y,colors.lime)
                end
        end
        for y=yStart,(yStart+1) do
                for x=(xStart+1),(xStart+lengthOfDocuments) do
                        paintutils.drawPixel(x,y,colors.red)
                end
        end
        for y=yStart,(yStart+1) do
                for x=(xStart+1+lengthOfDocuments),(xStart+lengthOfDocuments+lengthOfImages) do
                        paintutils.drawPixel(x,y,colors.yellow)
                end
        end
------------------------------
        sleep(2)
------------------------------
        end
end
 
 
 
for i=1,xSize do
        paintutils.drawPixel(i,1,colors.gray)
end
term.setTextColor(colors.lightGray)
writeText("About",math.floor(xSize/2-string.len("About")/2),1)
 
term.setBackgroundColor(colors.white)
infoText("Computer label",colors.gray,computerLabel,2,3)
infoText("Computer ID",colors.gray,tostring(os.getComputerID()),2,4)
infoText("Connected modem",colors.gray,computerModem,2,5)
infoText("Aviable space",colors.gray,math.ceil(totalSpace/1024).." KB",2,6)
infoText("Used space",colors.black,math.ceil(sizeOfAll/1024).." KB",2,8)
infoText("Free space",colors.gray,math.ceil(freeSpace/1024).." KB",2,9)
infoText("Documents",colors.red,math.ceil(fileDocument/1024).." KB",2,10)
infoText("Images",colors.yellow,math.ceil(fileImage/1024).." KB",2,11)
infoText("Other",colors.lime,math.ceil(fileOther/1024).." KB",2,12)
 
local function touch()
        while true do
                event = os.pullEvent()
                if event == "key" or event == "mouse_click" then break end
        end
end
 
parallel.waitForAny(displayBar,touch)
 
fadeOut(0.05)